unit UntDaoUtils;

interface

uses
  AdoDB, UntFuncoes, UntConexao, System.Contnrs, generics.collections, System.Classes, Data.DB;

type
  TDaoUtils = class
  private
    class function GetAdoConnection: TAdoConnection;
  public
    class function CriaQuery(AOwner: TComponent = nil): TADOQuery;

    class function RetornaDataset(const pSql: String; AOwner: TComponent = nil): TDataSet;

    class function ExecutaProcedure(const pSQL: String; pValorDef: Integer = 0): Integer;

    class function RetornaDouble(const pSQL: String; pValorDef: Double = 0): Double;
    class function RetornaInteiro(const pSQL: String; pValorDef: Integer = 0): Integer;
    class function RetornaDocVariant(const pSql: String): Variant;
    class function RetornaJSon(const pSql: String): String;

    class function GetUltimoID: Integer;

    // Popula o record com o primeiro registro retornado pelo banco
    class function RetornaRecord(var Rec; TypeInfo: pointer; const pSql: String): Boolean;
    // Retorna um array populado com o retorno da query
    class function RetornaArray(var pArray; TypeInfo: pointer; const pSql: String): Boolean;
    // Popula o objeto com o primeiro registro retornado pelo banco
    class function RetornaObjeto(var ObjectInstance; const pSql: String): Boolean;

    // Popula um objectlist, cada registro retornado será um objeto na lista. TItemClass = Classe dos Itens do ObjectList
    // ATENÇÃO:: AS PROPRIEDADES DO OBJETO QUE DEVEM SER RETORNADAS TEM QUE ESTAR NA SEÇÃO PUBLISHED!!!
    class function RetornaListaObjetos(var ObjectInstance: TObjectList; ItemClass: TClass; const pSql: String): Boolean; overload; static;
    class function RetornaListaObjetos<T: class>(var ObjectList: TObjectList<T>; ItemClass: TClass; const pSql: String): Boolean; overload; static;
  end;

implementation

{ TDaoUtils }

class function TDaoUtils.GetAdoConnection: TAdoConnection;
begin
  Result:= TConexao.GetInstance.Conn;
end;

class function TDaoUtils.GetUltimoID: Integer;
begin
  Result:= RetornaInteiro(' SELECT SCOPE_IDENTITY() ');
end;

class function TDaoUtils.CriaQuery(AOwner: TComponent = nil): TADOQuery;
begin
  Result:= TFuncoes.CriaQuery(GetAdoConnection, AOwner);
end;

class function TDaoUtils.ExecutaProcedure(const pSQL: String;
  pValorDef: Integer = 0): Integer;
begin
  Result:= TFuncoes.ExecutaProcedure(GetAdoConnection, pSql,pValorDef);
end;

class function TDaoUtils.RetornaDataset(const pSql: String; AOwner: TComponent = nil): TDataSet;
var
  fAdoQuery: TAdoQuery;
begin
  fAdoQuery:= TDaoUtils.CriaQuery(AOwner);
  fAdoQuery.SQL.Text:= pSql;
  fAdoQuery.Open;
  Result:= fAdoQuery;
end;

class function TDaoUtils.RetornaDocVariant(const pSql: String): Variant;
begin
  Result:= TFuncoes.RetornaDocVariant(GetAdoConnection, pSql);
end;

class function TDaoUtils.RetornaDouble(const pSQL: String;
  pValorDef: Double = 0): Double;
begin
  Result:= TFuncoes.RetornaDouble(GetAdoConnection, pSql, pValorDef);
end;

class function TDaoUtils.RetornaInteiro(const pSQL: String;
  pValorDef: Integer = 0): Integer;
begin
  Result:= TFuncoes.RetornaInteiro(GetAdoConnection, pSql, pValorDef);
end;

class function TDaoUtils.RetornaJSon(const pSql: String): String;
begin
  Result:= TFuncoes.RetornaJSon(GetAdoConnection, pSql);
end;

class function TDaoUtils.RetornaListaObjetos(var ObjectInstance: TObjectList;
  ItemClass: TClass; const pSql: String): Boolean;
begin
  Result:= TFuncoes.RetornaListaObjetos(ObjectInstance, ItemClass, GetAdoConnection, pSql);
end;

class function TDaoUtils.RetornaListaObjetos<T>(var ObjectList: TObjectList<T>;
  ItemClass: TClass; const pSql: String): Boolean;
begin
  Result:= TFuncoes.RetornaListaObjetos<T>(ObjectList, ItemClass, GetAdoConnection, pSql);
end;

class function TDaoUtils.RetornaObjeto(var ObjectInstance;
  const pSql: String): Boolean;
begin
  Result:= TFuncoes.RetornaObjeto(ObjectInstance, GetAdoConnection, pSql);
end;

class function TDaoUtils.RetornaRecord(var Rec; TypeInfo: pointer;
  const pSql: String): Boolean;
begin
  Result:= TFuncoes.RetornaRecord(Rec, TypeInfo, GetAdoConnection, pSql);
end;

class function TDaoUtils.RetornaArray(var pArray; TypeInfo: pointer;
  const pSql: String): Boolean;
begin
  Result:= TFuncoes.RetornaArray(pArray, TypeInfo, GetAdoConnection, pSql);
end;

end.

