unit UntMensagem;

interface

uses
  SysUtils, Windows, madExcept, madNVBitmap;

type
  TMensagem = class
  private
    class function GetTitulo(const pTipo: String; const pComplemento: String=''): String;
  public
    class procedure Erro(const pTexto: String; const pTitulo: String = ''; pAbort: Boolean = false);
    class procedure ErroComBugReport(const pTexto: String; const pTitulo: string = ''; pAbort: Boolean = false);
    class procedure Aviso(const pTexto: String; const pTitulo: String = '');
  end;

implementation

uses
  UntFuncoes;

{ TMensagem }

class function TMensagem.GetTitulo(const pTipo: string; const pComplemento: string=''): String;
begin
  if pComplemento='' then
    Result:= pTipo+'!'
  else
    Result:= pTipo+': '+pComplemento;

end;

class procedure TMensagem.Aviso(const pTexto: String; const pTitulo: String = '');
begin
  PrjMessage(pTexto, GetTitulo('Aviso',pTitulo), MB_ICONWARNING);
end;

class procedure TMensagem.Erro(const pTexto: String; const pTitulo: String = ''; pAbort: Boolean = false);
begin
  PrjMessage(pTexto, GetTitulo('Erro',pTitulo), MB_ICONERROR);
  if pAbort then
    Abort;
end;

class procedure TMensagem.ErroComBugReport(const pTexto: string; const pTitulo: string = ''; pAbort: Boolean = false);
var
  IException: IMEException;
begin
  TMensagem.Erro(pTexto, pTitulo, pAbort);

  AutoSendBugReport(CreateBugReport(etNormal), Screenshot);
end;

end.
